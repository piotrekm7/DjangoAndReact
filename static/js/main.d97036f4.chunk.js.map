{"version":3,"sources":["logo.svg","constants.js","components/NewStudentForm.js","components/NewStudentModal.js","components/ConfirmRemovalModal.js","components/StudentList.js","components/Pagination.js","components/GithubHeader.js","components/Home.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","API_URL","NewStudentForm","state","id","name","email","document","phone","onChange","e","setState","target","value","createStudent","preventDefault","axios","post","then","props","resetState","toggle","catch","catchError","editStudent","put","error","alert","response","console","log","data","status","headers","config","this","student","Form","onSubmit","FormGroup","Label","Input","type","required","Button","disabled","React","Component","NewStudentModal","modal","previous","title","buttonText","button_color","create","button","color","className","onClick","Modal","isOpen","ModalHeader","ModalBody","ConfirmRemovalModal","deleteStudent","delete","ModalFooter","StudentList","students","Table","dark","map","key","registration_date","align","PaginationBar","createPagination","items","i","push","PaginationItem","active","activePage","PaginationLink","changePage","numberOfPages","Pagination","next","GithubHeader","Jumbotron","href","Home","pages","getStudents","page","get","res","results","total_pages","Container","style","marginTop","Row","Col","App","Boolean","window","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.d97036f4.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","export const API_URL = \"https://djangoandreact.appspot.com/api/students/\";","import React from \"react\";\r\nimport {Button, Form, FormGroup, Input, Label} from \"reactstrap\"\r\nimport axios from \"axios\";\r\nimport {API_URL} from \"../constants\";\r\n\r\n\r\nclass NewStudentForm extends React.Component {\r\n    state = {\r\n        id: \"\",\r\n        name: \"\",\r\n        email: \"\",\r\n        document: \"\",\r\n        phone: \"\"\r\n    };\r\n\r\n    componentDidMount() {\r\n        if (this.props.student) {\r\n            const {id, name, email, document, phone} = this.props.student;\r\n            this.setState({id, name, email, document, phone});\r\n        }\r\n    };\r\n\r\n    onChange = e => {\r\n        this.setState({[e.target.name]: e.target.value});\r\n    };\r\n\r\n    createStudent = e => {\r\n        e.preventDefault();\r\n        axios.post(API_URL, this.state).then(() => {\r\n            this.props.resetState();\r\n            this.props.toggle();\r\n        }).catch(this.catchError);\r\n    };\r\n\r\n    editStudent = e => {\r\n        e.preventDefault();\r\n        axios.put(API_URL + this.state.id + '/', this.state).then(() => {\r\n            this.props.resetState();\r\n            this.props.toggle();\r\n        }).catch(this.catchError);\r\n    };\r\n\r\n    catchError = error => {\r\n        alert(\"The problem occurred with with your submission. Please check if the data provided is correct. If you need help, contact project administrator\");\r\n        if (error.response) {\r\n            console.log(error.response.data);\r\n            console.log(error.response.status);\r\n            console.log(error.response.headers);\r\n        }\r\n        console.log(error.config);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Form onSubmit={this.props.student ? this.editStudent : this.createStudent}>\r\n                <FormGroup>\r\n                    <Label>Name:</Label>\r\n                    <Input type=\"text\" name=\"name\" onChange={this.onChange} value={this.state.name} required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Email:</Label>\r\n                    <Input type=\"email\" name=\"email\" onChange={this.onChange} value={this.state.email} required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Document:</Label>\r\n                    <Input type=\"text\" name=\"document\" onChange={this.onChange} value={this.state.document} required/>\r\n                </FormGroup>\r\n                <FormGroup>\r\n                    <Label>Phone:</Label>\r\n                    <Input type=\"text\" name=\"phone\" onChange={this.onChange} value={this.state.phone} required/>\r\n                </FormGroup>\r\n                <Button type=\"submit\" disabled=\"true\">Submit</Button>\r\n            </Form>\r\n        );\r\n    }\r\n}\r\n\r\nexport default NewStudentForm;\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {Button, Modal, ModalBody, ModalHeader} from \"reactstrap\"\r\nimport NewStudentForm from \"./NewStudentForm\";\r\n\r\n\r\nclass NewStudentModal extends Component {\r\n    state = {\r\n        modal: false\r\n    };\r\n\r\n    toggle = () => {\r\n        this.setState(previous => ({\r\n            modal: !previous.modal\r\n        }));\r\n    };\r\n\r\n    render() {\r\n        const create = this.props.create;\r\n        let title, buttonText, button_color;\r\n        if (create) {\r\n            title = \"Creating New Student\";\r\n            buttonText = \"Create New\";\r\n            button_color = \"primary\";\r\n        } else {\r\n            title = \"Editing Student\";\r\n            buttonText = \"Edit\";\r\n            button_color = \"secondary\";\r\n        }\r\n\r\n        const button = (\r\n            <Button color={button_color} className=\"float-right\" onClick={this.toggle}>{buttonText}</Button>);\r\n\r\n        return (\r\n            <Fragment>\r\n                {button}\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader toggle={this.toggle}>{title}</ModalHeader>\r\n                    <ModalBody>\r\n                        <NewStudentForm resetState={this.props.resetState} student={this.props.student}\r\n                                        toggle={this.toggle}/>\r\n                    </ModalBody>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n\r\n    };\r\n}\r\n\r\nexport default NewStudentModal;\r\n","import React, {Component, Fragment} from \"react\";\r\nimport {Modal, ModalHeader, Button, ModalFooter} from \"reactstrap\";\r\nimport axios from \"axios\";\r\nimport {API_URL} from \"../constants\";\r\n\r\n\r\nclass ConfirmRemovalModal extends Component{\r\n    state={\r\n        modal: false\r\n    };\r\n\r\n    toggle = () =>{\r\n        this.setState(previous =>({\r\n            modal: !previous.modal\r\n        }));\r\n    };\r\n\r\n    deleteStudent = id => {\r\n        axios.delete(API_URL + id + '/').then(() => {\r\n            this.props.resetState();\r\n            this.toggle();\r\n        });\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Fragment>\r\n                <Button color=\"danger\" onClick={() => this.toggle()}>\r\n                    Remove\r\n                </Button>\r\n                <Modal isOpen={this.state.modal} toggle={this.toggle}>\r\n                    <ModalHeader>Do you really want to delete the student?</ModalHeader>\r\n                    <ModalFooter>\r\n                        <Button onClick={() => this.toggle()}>Cancel</Button>\r\n                        <Button disabled=\"true\" color=\"danger\" onClick={() => this.deleteStudent(this.props.id)}>Yes</Button>\r\n                    </ModalFooter>\r\n                </Modal>\r\n            </Fragment>\r\n        );\r\n    };\r\n}\r\n\r\nexport default ConfirmRemovalModal;\r\n","import React, {Component} from \"react\";\r\nimport {Table} from \"reactstrap\";\r\nimport NewStudentModal from \"./NewStudentModal\";\r\nimport ConfirmRemovalModal from \"./ConfirmRemovalModal\";\r\n\r\nclass StudentList extends Component {\r\n    render() {\r\n        const students = this.props.students;\r\n        return (\r\n            <Table dark>\r\n                <thead>\r\n                <tr>\r\n                    <th>Name</th>\r\n                    <th>Email</th>\r\n                    <th>Document</th>\r\n                    <th>Phone</th>\r\n                    <th>Registration</th>\r\n                </tr>\r\n                </thead>\r\n                <tbody>\r\n                {students.map(student => (\r\n                    <tr key={student.id}>\r\n                        <td>{student.name}</td>\r\n                        <td>{student.email}</td>\r\n                        <td>{student.document}</td>\r\n                        <td>{student.phone}</td>\r\n                        <td>{student.registration_date}</td>\r\n                        <td align=\"center\">\r\n                            <NewStudentModal create={false} student={student} resetState={this.props.resetState}/>\r\n                            <ConfirmRemovalModal id={student.id} resetState={this.props.resetState}/>\r\n                        </td>\r\n                    </tr>\r\n                ))}\r\n                </tbody>\r\n            </Table>\r\n        );\r\n    }\r\n}\r\n\r\nexport default StudentList;\r\n","import React, {Component} from \"react\";\r\nimport {Pagination, PaginationItem, PaginationLink} from \"reactstrap\";\r\n\r\nclass PaginationBar extends Component {\r\n    createPagination = () => {\r\n        let items = [];\r\n        for (let i = 1; i <= this.props.numberOfPages; i++) {\r\n            items.push(\r\n                <PaginationItem key={i} active={i === this.props.activePage}>\r\n                    <PaginationLink onClick={() => this.props.changePage(i)}>\r\n                        {i}\r\n                    </PaginationLink>\r\n                </PaginationItem>\r\n            )\r\n        }\r\n        return items;\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Pagination>\r\n                <PaginationItem disabled={this.props.activePage === 1}>\r\n                    <PaginationLink previous onClick={() => this.props.changePage(this.props.activePage-1)}/>\r\n                </PaginationItem>\r\n                {this.createPagination()}\r\n                <PaginationItem disabled={this.props.activePage === this.props.numberOfPages}>\r\n                    <PaginationLink next onClick={() => this.props.changePage(this.props.activePage+1)}/>\r\n                </PaginationItem>\r\n            </Pagination>\r\n        );\r\n    }\r\n}\r\n\r\nexport default PaginationBar;\r\n","import React from \"react\";\r\nimport {Jumbotron, Button} from \"reactstrap\";\r\n\r\nfunction GithubHeader() {\r\n    return(\r\n        <Jumbotron>\r\n            <h1>Django And React</h1>\r\n            <p>\r\n                This basic web application was made for testing combination of Django and React as\r\n                modern and simple approach for web development.\r\n            </p>\r\n            <Button color=\"success\" href=\"https://github.com/piotrekm7/DjangoAndReact\">\r\n                Code on github >>\r\n            </Button>\r\n        </Jumbotron>\r\n    )\r\n}\r\n\r\nexport default GithubHeader;\r\n","import React, {Component} from \"react\";\r\nimport {Col, Container, Row} from \"reactstrap\"\r\nimport StudentList from \"./StudentList\";\r\nimport NewStudentModal from \"./NewStudentModal\";\r\nimport axios from \"axios\"\r\nimport {API_URL} from \"../constants\";\r\nimport PaginationBar from \"./Pagination\";\r\nimport GithubHeader from \"./GithubHeader\";\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        students: [],\r\n        pages: 0,\r\n        activePage: 1,\r\n    };\r\n\r\n    componentDidMount() {\r\n        this.resetState();\r\n    }\r\n\r\n    getStudents = (page = 1) => {\r\n        axios.get(API_URL + '?page=' + page).then(res => {\r\n            this.setState({students: res.data.results});\r\n            this.setState({pages: res.data.total_pages})\r\n        }).catch((error) => {\r\n            alert(\"There is the problem with connecting to the server, please contact with project administrator.\");\r\n            console.log(error.config);\r\n        });\r\n    };\r\n\r\n    resetState = () => {\r\n        this.getStudents();\r\n    };\r\n\r\n    changePage = (page) => {\r\n        this.setState({activePage: page});\r\n        this.getStudents(page);\r\n    };\r\n\r\n    render() {\r\n        return (\r\n            <Container style={{marginTop: \"20px\"}}>\r\n                <GithubHeader/>\r\n                <Container style={{marginTop: \"20px\"}}>\r\n                    <Row>\r\n                        <Col>\r\n                            <StudentList students={this.state.students} resetState={this.resetState}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <Row>\r\n                        <Col>\r\n                            <NewStudentModal create={true} resetState={this.resetState}/>\r\n                        </Col>\r\n                    </Row>\r\n                    <PaginationBar numberOfPages={this.state.pages} activePage={this.state.activePage}\r\n                                   changePage={this.changePage}/>\r\n                </Container>\r\n            </Container>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Home from \"./components/Home\";\n\nfunction App() {\n  return (\n    <Home/>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}